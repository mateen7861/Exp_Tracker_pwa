{"ast":null,"code":"import _slicedToArray from\"/home/mateen/Desktop/Exp_Tracker_pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useState}from\"react\";import{GlobalContext}from\"../context/GlobalContext\";var NewTransaction=function NewTransaction(){var _useContext=useContext(GlobalContext),addTransaction=_useContext.addTransaction;var amount=\"\";// Local Context\nvar _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),title=_useState2[0],setTitle=_useState2[1];// const [amount, setAmount] = useState(0);\n// Create transaction on form submit\nvar onSubmit=function onSubmit(e){e.preventDefault();var newTransaction={id:Math.floor(Math.random()*100000000),title:title,amount:+amount};addTransaction(newTransaction);};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h3\",null,\"Add new transaction\"),/*#__PURE__*/React.createElement(\"form\",{onSubmit:onSubmit},/*#__PURE__*/React.createElement(\"div\",{className:\"form-control\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"text\"},\"Text\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",value:title,required:true,onChange:function onChange(e){setTitle(e.target.value);},placeholder:\"Enter text...\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-control\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"amount\"},\"Amount \",/*#__PURE__*/React.createElement(\"br\",null),\"(negative - expense, positive - income)\"),/*#__PURE__*/React.createElement(\"input\",{type:\"number\",ref:function ref(node){return amount=Number(node===null||node===void 0?void 0:node.value);},placeholder:\"Enter amount...\"})),/*#__PURE__*/React.createElement(\"button\",{className:\"btn\"},\"Add transaction\")));};export default NewTransaction;","map":{"version":3,"sources":["/home/mateen/Desktop/Exp_Tracker_pwa/src/components/NewTransaction.tsx"],"names":["React","useContext","useState","GlobalContext","NewTransaction","addTransaction","amount","title","setTitle","onSubmit","e","preventDefault","newTransaction","id","Math","floor","random","target","value","node","Number"],"mappings":"2JAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,QAA5B,KAA4C,OAA5C,CACA,OAASC,aAAT,KAA8B,0BAA9B,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,iBACAH,UAAU,CAACE,aAAD,CADV,CACnBE,cADmB,aACnBA,cADmB,CAE3B,GAAIC,CAAAA,MAAuB,CAAG,EAA9B,CACA;AAH2B,cAIDJ,QAAQ,CAAC,EAAD,CAJP,wCAIpBK,KAJoB,eAIbC,QAJa,eAK3B;AAEA;AACA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,CAAD,CAAuC,CACtDA,CAAC,CAACC,cAAF,GAEA,GAAMC,CAAAA,cAAc,CAAG,CACrBC,EAAE,CAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgB,SAA3B,CADiB,CAErBT,KAAK,CAALA,KAFqB,CAGrBD,MAAM,CAAE,CAACA,MAHY,CAAvB,CAMAD,cAAc,CAACO,cAAD,CAAd,CACD,CAVD,CAYA,mBACE,qDACE,oDADF,cAEE,4BAAM,QAAQ,CAAEH,QAAhB,eACE,2BAAK,SAAS,CAAC,cAAf,eACE,6BAAO,OAAO,CAAC,MAAf,SADF,cAEE,6BACE,IAAI,CAAC,MADP,CAEE,KAAK,CAAEF,KAFT,CAGE,QAAQ,CAAE,IAHZ,CAIE,QAAQ,CAAE,kBAACG,CAAD,CAAO,CACfF,QAAQ,CAACE,CAAC,CAACO,MAAF,CAASC,KAAV,CAAR,CACD,CANH,CAOE,WAAW,CAAC,eAPd,EAFF,CADF,cAaE,2BAAK,SAAS,CAAC,cAAf,eACE,6BAAO,OAAO,CAAC,QAAf,yBACS,8BADT,2CADF,cAKE,6BACE,IAAI,CAAC,QADP,CAEE,GAAG,CAAE,aAAAC,IAAI,QAAIb,CAAAA,MAAM,CAAGc,MAAM,CAACD,IAAD,SAACA,IAAD,iBAACA,IAAI,CAAED,KAAP,CAAnB,EAFX,CAGE,WAAW,CAAC,iBAHd,EALF,CAbF,cAwBE,8BAAQ,SAAS,CAAC,KAAlB,oBAxBF,CAFF,CADF,CA+BD,CAnDD,CAqDA,cAAed,CAAAA,cAAf","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { GlobalContext } from \"../context/GlobalContext\";\n\nconst NewTransaction = () => {\n  const { addTransaction } = useContext(GlobalContext);\n  let amount: number | string = \"\";\n  // Local Context\n  const [title, setTitle] = useState(\"\");\n  // const [amount, setAmount] = useState(0);\n\n  // Create transaction on form submit\n  const onSubmit = (e: { preventDefault: () => void }) => {\n    e.preventDefault();\n\n    const newTransaction = {\n      id: Math.floor(Math.random() * 100000000),\n      title,\n      amount: +amount,\n    };\n\n    addTransaction(newTransaction);\n  };\n\n  return (\n    <>\n      <h3>Add new transaction</h3>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-control\">\n          <label htmlFor=\"text\">Text</label>\n          <input\n            type=\"text\"\n            value={title}\n            required={true}\n            onChange={(e) => {\n              setTitle(e.target.value);\n            }}\n            placeholder=\"Enter text...\"\n          />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"amount\">\n            Amount <br />\n            (negative - expense, positive - income)\n          </label>\n          <input\n            type=\"number\"\n            ref={node => amount = Number(node?.value)}\n            placeholder=\"Enter amount...\"\n          />\n        </div>\n        <button className=\"btn\">Add transaction</button>\n      </form>\n    </>\n  );\n};\n\nexport default NewTransaction;\n"]},"metadata":{},"sourceType":"module"}